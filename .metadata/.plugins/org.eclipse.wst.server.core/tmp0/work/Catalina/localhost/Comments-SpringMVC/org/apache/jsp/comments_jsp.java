/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.44
 * Generated at: 2017-07-03 08:09:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class comments_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>留言板</title>\n");
      out.write("</head>\n");
      out.write("<body onload=\"showList()\">\n");
      out.write("<div>欢迎：");
      out.print(session.getAttribute("userName") );
      out.write("</div>\n");
      out.write("<a href=\"ActionServlet?type=logout\">注销</a>\n");
      out.write("<div id=\"commentsList\" ></div>\n");
      out.write("<div class=\"addComment\">\n");
      out.write("<div><a href=\"ActionServlet?type=goPage&page=-1\">上一页</a><span ><input id=\"pageNUM\" type=\"text\" value=\"");
      out.print(session.getAttribute("currentPage") );
      out.write('"');
      out.write('>');
      out.write('/');
      out.print(session.getAttribute("totalPage") );
      out.write("</span><a href=\"ActionServlet?type=goPage&page=");
      out.print(session.getAttribute("currentPage") );
      out.write("\">下一页</a></div>\n");
      out.write("<form id=\"formComment\">\n");
      out.write("  添加评论：<br />\n");
      out.write(" <textarea name=\"content\"></textarea><br />\n");
      out.write(" 验证码：<input name=\"inputCode\" value=\"\"/>\n");
      out.write("    <img src=\"VerifyCodeServlet\" align=\"middle\" title=\"看不清，请点我\"  onclick=\"javascript:refresh(this);\" onmouseover=\"mouseover(this)\"/><br/>\n");
      out.write("    <button id=\"btnNewComment\">提交</button>\n");
      out.write("</form>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("<script src=\"http://code.jquery.com/jquery-1.11.0.min.js\"></script>\n");
      out.write("<script src=\"http://malsup.github.io/jquery.form.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("function showList(){\n");
      out.write("\tvar clist  ='");
      out.print(session.getAttribute("clist") );
      out.write("';\n");
      out.write("\tvar json= JSON.parse(clist)\n");
      out.write("\tconsole.log(json);\n");
      out.write("\tvar commentslist = document.getElementById(\"commentsList\");\n");
      out.write("\tvar p=\"\";\n");
      out.write("\tcommentslist.innerHTML=null;\n");
      out.write("\t  for(var i in json)  \n");
      out.write("\t  {  \n");
      out.write("\t\t  p+=\"<p> \"+json[i].id+\"   <span>\"+json[i].publishTime+\"</span><br/><h1>\"+json[i].content+\"</h1>\"+\"<p>\";\n");
      out.write("\t  }  \n");
      out.write("\t//console.log(p);\n");
      out.write("\tcommentslist.innerHTML=p;\n");
      out.write("}\n");
      out.write("\n");
      out.write("function refresh(obj){  \n");
      out.write("    obj.src = \"VerifyCodeServlet?\" + Math.random();  \n");
      out.write("}  \n");
      out.write(" \n");
      out.write("function mouseover(obj){  \n");
      out.write("   obj.style.cursor = \"pointer\";  \n");
      out.write("}  \n");
      out.write("\n");
      out.write("</script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("$('#pageNUM').on('change',function(){\n");
      out.write("\t\n");
      out.write("\twindow.location.href='ActionServlet?type=goPage&page='+($(this).val()-1);\n");
      out.write("});\n");
      out.write("$('#btnNewComment').on('click', function() {\n");
      out.write("\n");
      out.write("    $('#formComment').on('submit', function() {\n");
      out.write("        var  content = $('textarea').val();\n");
      out.write("\n");
      out.write("        $(this).ajaxSubmit({\n");
      out.write("            type: 'post', // 提交方式 get/post\n");
      out.write("            url: 'ActionServlet', // 需要提交的 url\n");
      out.write("            data: {\n");
      out.write("                'type': 'newComment',\n");
      out.write("                'content': content\n");
      out.write("            },\n");
      out.write("            success: function(data) { // data 保存提交后返回的数据，一般为 json 数据\n");
      out.write("                // 此处可对 data 作相关处理\n");
      out.write("                console.log('提交成功！');\n");
      out.write("                window.location.href='ActionServlet?type=goPage&page=");
      out.print(session.getAttribute("totalPage") );
      out.write("';\n");
      out.write("                \n");
      out.write("            $(this).resetForm(); // 提交后重置表单\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("        return false; // 阻止表单自动提交事件\n");
      out.write("    });\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
