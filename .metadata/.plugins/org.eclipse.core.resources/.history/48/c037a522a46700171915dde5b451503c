package cn.aspect;


import java.util.List;

import javax.annotation.Resource;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.AfterReturning;
import org.aspectj.lang.annotation.AfterThrowing;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.springframework.stereotype.Component;


import cn.anno.PrivilegeInfo;
import cn.tx.TranscationManager;
import cn.util.Privilege;
@Component
@Aspect
public class PersonAspect {
	
	
	
	@Around(value="execution(* cn.service..*(..)) && @annotation(tran)")
	public Object around(ProceedingJoinPoint joinPoint,PrivilegeInfo tran) throws Throwable {
		List<String> pList = Privilege.getpList();
		Object object = joinPoint.proceed();
		return object;
	}

}
