<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation=
       	  "http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context    
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/util    
           http://www.springframework.org/schema/util/spring-util-3.2.xsd
           http://www.springframework.org/schema/aop    
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
           http://www.springframework.org/schema/tx   
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	
	<!--开启包扫描
		componet-scan base-package
	  -->
	<context:component-scan base-package="service"/>
    
    <!--引入外部配置文件
    	property-placeholder location
      -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
    
    <!--配置数据源 
    	dataSource com.mchange.v2.c3p0.ComboPooledDataSource
    		driverClass 
    		jdbcUrl
    		user
    		password
    		
    -->  
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${c3p0.driver}"/>
		<property name="jdbcUrl" value="${c3p0.url}"/>
		<property name="user" value="${c3p0.user}"/>
		<property name="password" value="${c3p0.password}"/>
	</bean>
    
    <!--配置事务管理器  
    	transactionManager org.springframework.jdbc.datasource.DataSourceTransactionManager
    		dataSource dataSource
    -->
	<bean id="" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" value="dataSource"/>
	</bean>
    
    <!--配置事务通知 
    	txAdvice transactionManager
    	tx:attributes
    		tx:method add* REQUIRED
    		          del* REQUIRED
    		          update* REQUIRED
    		          find*   SUPPORTS
    		          *       true
     -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="del*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="find*" propagation="REQUIRED"/>
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
    
    <!--配置事务切面  
    	aop:config execution(* service..*(..)) pc
    	advisor advice-ref pointcut-ref
    -->
	<aop:config>
		<aop:pointcut expression="execution(* service..*(..))" id="pc"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>
	</aop:config>
    
    
    <!--整合mybatis  
    	org.mybatis.spring.SqlSessionFactoryBean
    	dataSource
    	configLocation
    	mapperLocations
    -->
   <bean class="org.mybatis.spring.SqlSessionFactoryBean">
   	<property name="dataSource" ref="dataSource"/>
   	<property name="configLocation" value="classpath:sqlMapConfig.xml"/>
   	<property name="mapperLocations" value="calsspath:/pojo/*.xml"></property>
   </bean>
    
    <!--配置mapper接口   扫描mapper包 并且为接口文件创建代理对象
    	org.mybatis.spring.mapper.MapperScannerConfigurer
    	basePackage
    -->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
   	<property name="basePackage" value="mapper"></property>
   </bean>
    
    
    
    
    
    
    
    
    
    
    
</beans>