package jdbc;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
/**
 * UserInfoDao 的实现类
 */
import java.util.List;

import jdbc2.DBUtil;

public class UserInfoDaoImpl implements UserInfoDao {

	@Override
	public boolean save(UserInfo userinfo) {
		Connection conn = null;
		PreparedStatement ps = null;
		try {
			conn = DBUtil.getConnection();
			String sql = "INSERT INTO userinfo "
					+ "(id,username,password,email,nickname,account) "
					+ "VALUES "
					+ "(seq_userinfo_id.NEXTVAL,?,?,?,?,?) ";
			ps = conn.prepareStatement(sql, new String[]{"id"});
			ps.setString(1, userinfo.getUsername());
			ps.setString(2, userinfo.getPassword());
			ps.setString(3, userinfo.getEmail());
			ps.setString(4, userinfo.getNickname());
			ps.setDouble(5, userinfo.getAccount());
			int i = ps.executeUpdate();
			
			if(i > 0){
				ResultSet rs = ps.getGeneratedKeys();
				
				rs.next();
				int id = rs.getInt(1);
				System.out.println("插入的用户id为："+id);
				 return true;
				
			}
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			if(ps !=null){
				try {
					ps.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			if(conn != null){
				DBUtil.closeConnection(conn);
			}
		}
		return false;
	}

	@Override
	public UserInfo findByName(String username) {
		Connection conn = null;
		PreparedStatement ps = null;
		UserInfo userinfo =null;
		try {
			conn = DBUtil.getConnection();
			String sql = "SELECT * FROM userinfo "
					+ "WHERE "
					+ "username =?";
			ps = conn.prepareStatement(sql);
			ps.setString(1, username);
			ResultSet rs = ps.executeQuery();
			
			if(rs.next() !=null){
				userinfo.setId(rs.getInt("id"));
				userinfo.setUsername(rs.getString("usernaem"));
				userinfo.setPassword(rs.getString("password"));
				userinfo.setEmail(rs.getString("email"));
				userinfo.setNickname(rs.getString("nickname"));
				userinfo.setAccount(rs.getDouble("account"));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			if(ps !=null){
				try {
					ps.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			if(conn != null){
				DBUtil.closeConnection(conn);
			}
		}
		 return userinfo;
	}

	@Override
	public List<UserInfo> findAll() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<UserInfo> findAllByPage(int pageSize, int page) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean update(UserInfo userinfo) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean updateForTransfor(UserInfo u1, UserInfo u2) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean deleteById(int id) {
		// TODO Auto-generated method stub
		return false;
	}

}
