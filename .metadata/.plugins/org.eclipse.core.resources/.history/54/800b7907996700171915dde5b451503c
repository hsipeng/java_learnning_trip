package cn.anno;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Before;

@Target(ElementType.METHOD)//指定运行在方法上
@Retention(RetentionPolicy.RUNTIME)//在何时运行
public @interface Transactional {
	@Around(value="execution(* cn.servlet..*(..))")
	public Object around(ProceedingJoinPoint joinPoint) throws Throwable {
		System.out.println("类名："+joinPoint.getTarget().getClass());
		System.out.println("方法名："+joinPoint.getSignature().getName());
		long start = System.currentTimeMillis();
		Object object = joinPoint.proceed();
		long end = System.currentTimeMillis();
		System.out.println("程序运行时间为：" +(end-start)+"ms");
		return object;
	}
}
